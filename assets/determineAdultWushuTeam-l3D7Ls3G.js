function C(l){const i=[],g=[],f=[],a=new Set,m=["CQ_DS_GS","CQ_JS_QS","NQ_ND_NG","TQ_TJ"],r={};for(const e in l){if(!m.includes(e))continue;const t=l[e];for(const o in t){const s=t[o],n=parseFloat(s.calculations.averageFinalScore),p=s.calculations.aTeamEligible;n<=0||(r[o]||(r[o]={name:o,score:n,aTeamEligible:p,allCategories:new Set,firstCategory:e}),r[o].allCategories.add(e))}}const h=e=>{const t=r[e];return t?{name:t.name,score:t.score,aTeamEligible:t.aTeamEligible,allCategories:Array.from(t.allCategories),firstCategory:t.firstCategory}:null},c=(e,t,o)=>{e.push({name:t.name,score:t.score,representingCategory:o}),a.add(t.name)};for(const e of m){if(i.length>=4)break;const t=l[e]||{},o=Object.values(t).map(s=>h(s.competitor.name)).filter(s=>s&&s.aTeamEligible&&!a.has(s.name)).sort((s,n)=>n.score-s.score);if(o.length>0){const s=o[0];c(i,s,e)}}let u=Object.values(r).filter(e=>e.aTeamEligible&&!a.has(e.name)).sort((e,t)=>t.score-e.score);for(let e=0;i.length<4&&e<u.length;e++){const t=u[e];c(i,t,t.firstCategory)}for(const e of m){if(g.length>=4)break;const t=l[e]||{},o=Object.values(t).map(s=>h(s.competitor.name)).filter(s=>s&&!a.has(s.name)).sort((s,n)=>n.score-s.score);if(o.length>0){const s=o[0];c(g,s,e)}}let b=Object.values(r).filter(e=>!a.has(e.name)).sort((e,t)=>t.score-e.score);for(let e=0;g.length<6&&e<b.length;e++){const t=b[e];c(g,t,t.firstCategory)}for(const e of m){if(f.length>=4)break;const t=l[e]||{},o=Object.values(t).map(s=>h(s.competitor.name)).filter(s=>s&&!a.has(s.name)).sort((s,n)=>n.score-s.score);if(o.length>0){const s=o[0];c(f,s,e)}}let d=Object.values(r).filter(e=>!a.has(e.name)).sort((e,t)=>t.score-e.score);for(let e=0;f.length<6&&e<d.length;e++){const t=d[e];c(f,t,t.firstCategory)}return{aTeam:i,bTeam:g,cTeam:f}}export{C as d};
