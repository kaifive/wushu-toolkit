function N(h){const i=[],f=[],u=[],p=new Set,m=["CQ_DS_GS","CQ_JS_QS","NQ_ND_NG","TQ_TJ"],g={};for(const e in h)if(Object.hasOwnProperty.call(h,e)&&typeof h[e]=="object"){const n=h[e];for(const t in n)if(Object.hasOwnProperty.call(n,t)&&typeof n[t]=="object"){const r=n[t],a=parseFloat(r.calculations.averageFinalScore),s=r.calculations.aTeamEligible;if(isNaN(a)||a<=0)continue;g[t]||(g[t]={}),g[t][e]={name:t,score:a,aTeamEligible:s,representingCategory:e}}}const c=(e=null,n=!0,t=!1)=>{const r=[];for(const a in g){const s=g[a];if(e){if(s[e]){const o=s[e];if(n&&p.has(o.name)||t&&!o.aTeamEligible)continue;r.push(o)}}else{let o=null;for(const C in s)if(m.includes(C)){const d=s[C];if(n&&p.has(d.name)||t&&!d.aTeamEligible)continue;(!o||d.score>o.score)&&(o=d)}o&&r.push(o)}}return r.sort((a,s)=>s.score-a.score)},l=(e,n)=>{e.push({name:n.name,score:n.score,representingCategory:n.representingCategory}),p.add(n.name)};for(const e of m){if(i.length>=4)break;const n=c(e,!0,!0);n.length>0&&l(i,n[0])}let b=c(null,!0,!0);for(let e=0;i.length<4&&e<b.length;e++){const n=b[e];l(i,n)}for(const e of m){if(f.length>=4)break;const n=c(e,!0,!1);n.length>0&&l(f,n[0])}let y=c(null,!0,!1);for(let e=0;f.length<6&&e<y.length;e++){const n=y[e];l(f,n)}for(const e of m){if(u.length>=4)break;const n=c(e,!0,!1);n.length>0&&l(u,n[0])}let T=c(null,!0,!1);for(let e=0;u.length<6&&e<T.length;e++){const n=T[e];l(u,n)}return{aTeam:i,bTeam:f,cTeam:u}}export{N as d};
